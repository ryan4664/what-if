generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(uuid()) @db.Uuid
  emailAddress String @unique @db.VarChar
  password     String @db.VarChar
  timeShards   Int    @default(0) @db.Integer
  heros        Hero[]
}

model Hero {
  id                String          @id @default(uuid()) @db.Uuid
  multiverse        String          @unique @db.Uuid
  name              String          @db.VarChar(250)
  userId            String          @db.Uuid
  currentLevel      Int             @default(1) @db.Integer
  currentExperience Int             @default(1) @db.Integer
  user              User            @relation(fields: [userId], references: [id])
  heroAttributes    HeroAttribute[]
}

model HeroAttribute {
  id          String    @id @default(uuid())
  heroId      String    @db.Uuid
  attributeId String    @db.Uuid
  hero        Hero      @relation(fields: [heroId], references: [id])
  attriubute  Attribute @relation(fields: [attributeId], references: [id])
}

model Attribute {
  id             String          @id @default(uuid()) @db.Uuid
  name           String          @db.VarChar(100)
  heroAttributes HeroAttribute[]
  moves          AttributeMove[]
}

model AttributeMove {
  id          String    @id @default(uuid()) @db.Uuid
  name        String    @default("DefaultMoveName") @db.VarChar(250)
  attributeId String    @db.Uuid
  attriubute  Attribute @relation(fields: [attributeId], references: [id])


}

model LevelTiers {
  id            String @id @default(uuid())
  level         Int    @db.Integer
  minExperience Int    @db.Integer
}
